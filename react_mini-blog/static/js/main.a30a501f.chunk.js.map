{"version":3,"sources":["reducers/PostsReducer.jsx","actions/actions.jsx","reducers/SinglePostsReducer.jsx","reducers/UsersReducer.jsx","reducers/CommentsReducer.jsx","reducers/SearchReducer.jsx","reducers/index.jsx","Components/Search/Search.jsx","Components/Search/index.jsx","Components/Header/Header.jsx","Components/Header/index.jsx","Components/Home/index.jsx","Components/Home/Home.jsx","Components/Post/Post.jsx","Components/Post/index.jsx","Components/AllPost/AllPost.jsx","Components/AllPost/index.jsx","Components/User/User.jsx","Components/User/index.jsx","Components/Comment/Comment.jsx","Components/Comment/index.jsx","Components/SinglePost/SinglePost.jsx","Components/SinglePost/index.jsx","Components/SearchView/SearchView.jsx","Components/SearchView/index.jsx","Components/NotFound/index.jsx","Components/NotFound/NotFound.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["PostsReducer","state","arguments","length","undefined","action","type","data","SinglePostsReducer","UsersReducer","CommentsReducer","SearchReducer","combineReducers","posts","single_post","users","comments","search","Search","this","props","getFindPost","searchInput","value","_this","react_default","a","createElement","Fragment","Form","inline","FormControl","placeholder","className","ref","input","NavLink","to","variant","onClick","handleFindPost","bind","Component","connect","dispatch","Header","updateAllPost","Container","Navbar","bg","expand","exact","Toggle","aria-controls","Collapse","id","Nav","getAllPostOnClick","Components_Search","Home","Post","arrayData","slice","call","userId","getSinglePost","_this$props","title","body","Card","Img","style","height","width","margin","src","Body","Title","Text","handleID","post","AllPost","fetch","then","res","json","getAllPosts","fetchAllPosts","Row","map","Col","xs","lg","key","Components_Post","User","getAllUsers","fetchAllUsers","user","Alert","username","name","email","Comment","getAllComments","fetchAllComments","comment","postId","SinglePost","border","Components_User","Components_Comment","SearchView","filter","includes","NotFound","App","BrowserRouter","Components_Header","Switch","Route","path","component","Boolean","window","location","hostname","match","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","Provider","PropTypes","array","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a30a501f.chunk.js","sourcesContent":["import {All_POSTS, UPDATE_POSTS} from '../actions/index.jsx';\r\n\r\nconst PostsReducer = (state = [], action) => {\r\n  switch(action.type){\r\n      case All_POSTS:\r\n\t    return action.data;\r\n\t  case UPDATE_POSTS:\r\n\t\t  return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default PostsReducer;\r\n","\r\nconst All_POSTS     = 'All_POSTS';\r\nconst UPDATE_POSTS  = 'UPDATE_POSTS';\r\nconst All_COMMENTS  = 'All_COMMENTS';\r\nconst All_USERS     = 'All_USERS';\r\n\r\nconst SINGLE_POST   = 'SINGLE_POST';\r\nconst FIND_POST     = 'FIND_POST';\r\n\r\nconst getAllPosts = (data) => {\r\n\treturn{\r\n\t\ttype: All_POSTS,\r\n\t\tdata: data\r\n\t}\r\n};\r\n\r\n// const getSinglePost = (data) => {\r\n// \treturn {\r\n// \t\ttype: 'SINGLE_POST',\r\n// \t\tdata: data\r\n// \t}\r\n// };\r\n\r\n// const getFindPost = (data) => {\r\n// \treturn{\r\n// \t\ttype: 'FIND_POST',\r\n// \t\tdata: data\r\n// \t}\r\n// };\r\n\r\nconst getAllComments = (data) => {\r\n\treturn {\r\n\t\ttype: 'All_COMMENTS',\r\n\t\tdata: data\r\n\t}\r\n};\r\n\r\nconst getAllUsers = (data) => {\r\n\treturn{\r\n\t\ttype: 'All_USERS',\r\n\t\tdata: data\r\n\t}\r\n};\r\n\r\nexport {\r\n\tAll_POSTS,\r\n\tUPDATE_POSTS,\r\n\tAll_COMMENTS,\r\n\tAll_USERS,\r\n\tSINGLE_POST,\r\n\tFIND_POST,\r\n\tgetAllPosts,\r\n\t// getSinglePost,\r\n\t// getFindPost,\r\n\tgetAllComments,\r\n\tgetAllUsers\r\n};","import {SINGLE_POST} from '../actions/index.jsx';\r\n\r\nconst SinglePostsReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n      case SINGLE_POST:\r\n        return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default SinglePostsReducer;\r\n","import {All_USERS} from '../actions/index.jsx';\r\n\r\nconst UsersReducer = (state = [], action) => {\r\n  switch(action.type){\r\n      case All_USERS:\r\n\t    return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default UsersReducer;\r\n","import {All_COMMENTS} from '../actions/index.jsx';\r\n\r\nconst CommentsReducer = (state = [], action) => {\r\n  switch(action.type){\r\n      case All_COMMENTS:\r\n\t    return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CommentsReducer;\r\n","import {FIND_POST} from '../actions/index.jsx';\r\n\r\nconst SearchReducer = (state = '', action) => {\r\n  switch(action.type){\r\n      case FIND_POST:\r\n\t    return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default SearchReducer;\r\n","import {combineReducers} from 'redux';\r\nimport PostsReducer from './PostsReducer';\r\nimport SinglePostsReducer from './SinglePostsReducer';\r\nimport UsersReducer from './UsersReducer';\r\nimport CommentsReducer from './CommentsReducer';\r\nimport SearchReducer from './SearchReducer';\r\n\r\nexport default combineReducers({\r\n\t'posts': PostsReducer,\r\n\t'single_post': SinglePostsReducer,\r\n\t'users': UsersReducer,\r\n\t'comments': CommentsReducer,\r\n\t'search': SearchReducer\r\n});","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Form, FormControl} from 'react-bootstrap';\r\n\r\nclass Search extends Component{\r\n\r\n\thandleFindPost(){\r\n\t\tthis.props.getFindPost(this.searchInput.value);\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Form inline>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\tclassName=\"mr-sm-2\"\r\n\t\t\t\t\t\tref={input=>{this.searchInput = input}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NavLink to=\"/posts/search\"\r\n\t\t\t\t\t    className=\"btn btn-info mx-0\"\r\n\t\t\t\t\t\tvariant=\"outline-success\"\r\n\t\t\t\t\t\tonClick={this.handleFindPost.bind(this)}\r\n\t\t\t\t\t>Search</NavLink>\r\n\t\t\t\t</Form>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn state;\r\n}\r\n\r\nconst mapStateToDispatch = (dispatch) => {\r\n\treturn{\r\n\t\tgetFindPost: (data) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'FIND_POST',\r\n\t\t\t\tdata: data\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapStateToDispatch\r\n)(Search);","import Search from './Search';\r\n\r\nexport default Search;","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n// import axios from 'axios';\r\nimport {Container, Navbar, Nav} from 'react-bootstrap';\r\n\r\nimport Search from '../Search/index';\r\n// import AllPost from '../AllPost/index.jsx';\r\n\r\nclass Header extends Component{\r\n\r\n\tgetAllPostOnClick(){\r\n\t\tthis.props.updateAllPost(this.props.posts);\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Container>\r\n\t\t\t\t<Navbar bg=\"light\" expand=\"lg\" className=\"p-3\">\r\n\t\t\t\t\t<NavLink exact to=\"/\" className=\"mr-2\">\r\n\t\t\t\t\t\t<span>Logo</span>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t\t<NavLink exact to=\"/\" className=\"nav-link mr-2\">Главная</NavLink>\r\n\t\t\t\t\t\t\t<NavLink to=\"/posts\" className=\"nav-link mr-2\" onClick={this.getAllPostOnClick.bind(this)}>Блог</NavLink>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t<Search />\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Navbar>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tposts: state.posts\r\n\t};\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn{\r\n\t\tupdateAllPost: (data) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'UPDATE_POSTS',\r\n\t\t\t\tdata: data\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Header)","import Header from './Header';\r\n\r\nexport default Header;","import Home from './Home';\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\n// import {connect} from 'react-redux';\r\n// import {Container} from 'react-bootstrap';\r\n\r\nclass Home extends Component{\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h1 className=\"py-5\">Главная</h1>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nclass Post extends Component{\r\n\r\n\thandleID(){\r\n\t\tconst arrayData = [].slice.call(arguments);\r\n\r\n\t\tlet data = {};\r\n\t\tdata.id = arrayData[0];\r\n\t\tdata.userId = arrayData[1];\r\n\r\n\t\tthis.props.getSinglePost(data);\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {id,userId,title,body} = this.props;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Card className={\"mb-3\"}>\r\n\t\t\t\t\t<Card.Img style={{ height: '10rem', width: '10rem', margin: 'auto'}} variant=\"top\" src=\"http://089a12354f66f8c089ca-2b0da8e65ee035845e5cc0511bab26ba.r78.cf1.rackcdn.com/global/imagelib/distancelearning/no-img-6c91ea01d3af4559c726afc209ddec79d965cac9.png\" />\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title>{title}</Card.Title>\r\n\t\t\t\t\t\t<Card.Text>{body}</Card.Text>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tto={'/posts/'+id}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\tonClick={this.handleID.bind(this,id,userId)}\r\n\t\t\t\t\t\t>More</NavLink>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// export default connect()(Post)\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tpost: state.posts,\r\n\t\tsingle_post: state.single_post\r\n\t};\r\n}\r\n\r\nconst mapStateToDispatch = (dispatch) => {\r\n\treturn{\r\n\t\tgetSinglePost: (data) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SINGLE_POST',\r\n\t\t\t\tdata: data\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapStateToDispatch\r\n)(Post)","import Post from './Post';\r\n\r\nexport default Post;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n// const {takeEvery} = 'redux-saga';\r\n// const {put, call} = 'redux-saga/effects';\r\n// import axios from 'axios';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport Post from '../Post/index.jsx';\r\nimport {getAllPosts} from '../../actions/index.jsx';\r\n\r\nclass AllPost extends Component{\r\n\r\n\t// * fetchAllPosts(){\r\n\t// \tconst url = 'https://jsonplaceholder.typicode.com/posts';\r\n\t//\r\n\t// \ttry{\r\n\t// \t\tconst data = yield call(() => {\r\n\t// \t\t\treturn fetch(url)\r\n\t// \t\t\t\t.then(res => res.json)\r\n\t// \t\t});\r\n\t// \t\tyield put( getAllPosts(data) );\r\n\t// \t}\r\n\t// \tcatch {\r\n\t// \t\tyield 'error loading';\r\n\t// \t}\r\n\t// }\r\n\r\n\t// React-Thunk\r\n\tfetchAllPosts() {\r\n\t\treturn (dispatch) => {\r\n\t\t\tconst url = 'https://jsonplaceholder.typicode.com/posts';\r\n\r\n\t\t\tfetch(url)\r\n\t\t\t\t.then(res => res.json())\r\n\t\t\t\t.then(\r\n\t\t\t\t\tdata => dispatch( getAllPosts(data) )\r\n\t\t\t\t)\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.dispatch( this.fetchAllPosts() );\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst posts = this.props.posts;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h1 className=\"py-5\">Блог</h1>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tposts.map((post) =>\r\n\r\n\t\t\t\t\t\t\t<Col xs lg=\"4\" key={post.id}>\r\n\t\t\t\t\t\t\t\t<Post\r\n\t\t\t\t\t\t\t\t\tkey={post.id}\r\n\t\t\t\t\t\t\t\t\tid={post.id}\r\n\t\t\t\t\t\t\t\t\tuserId={post.userId}\r\n\t\t\t\t\t\t\t\t\ttitle={post.title}\r\n\t\t\t\t\t\t\t\t\tbody={post.body}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</Row>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn{\r\n\t\tposts: state.posts\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(AllPost);","import AllPost from './AllPost';\r\n\r\nexport default AllPost;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n// import axios from \"axios/index\";\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nimport {getAllUsers} from '../../actions/index.jsx';\r\n\r\nclass User extends Component{\r\n\r\n\t// React-Thunk\r\n\tfetchAllUsers() {\r\n\t\treturn (dispatch) => {\r\n\t\t\tconst url = 'https://jsonplaceholder.typicode.com/users';\r\n\r\n\t\t\tfetch(url)\r\n\t\t\t\t.then(res => res.json())\r\n\t\t\t\t.then(\r\n\t\t\t\t\tdata => dispatch( getAllUsers(data) )\r\n\t\t\t\t)\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.dispatch( this.fetchAllUsers() );\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {users,single_post} = this.props;\r\n\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{\r\n\t\t\t\t\tusers.map((user) => {\r\n\t\t\t\t\t\tif (user.id === single_post.userId) {\r\n\t\t\t\t\t\t\treturn (\r\n\r\n\t\t\t\t\t\t\t<Alert key={user.id} className=\"alert-info mb-0\">\r\n\t\t\t\t\t\t\t\t<p className=\"mb-1\"><b>Автор:</b> {user.username} <small>(карма - {single_post.userId})</small></p>\r\n\t\t\t\t\t\t\t\t<p className=\"mb-1\"><b>Имя:</b> {user.name}</p>\r\n\t\t\t\t\t\t\t\t<span><b>Email:</b> <i>{user.email}</i></span>\r\n\t\t\t\t\t\t\t</Alert>\r\n\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tsingle_post: state.single_post,\r\n\t\tusers: state.users\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps)(User);","import User from './User';\r\n\r\nexport default User;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n// import axios from \"axios/index\";\r\nimport {getAllComments} from '../../actions/index.jsx';\r\n\r\nclass Comment extends Component{\r\n\r\n\t// React-Thunk\r\n\tfetchAllComments() {\r\n\t\treturn (dispatch) => {\r\n\t\t\tconst url = 'https://jsonplaceholder.typicode.com/comments';\r\n\r\n\t\t\tfetch(url)\r\n\t\t\t\t.then(res => res.json())\r\n\t\t\t\t.then(\r\n\t\t\t\t\tdata => dispatch( getAllComments(data) )\r\n\t\t\t\t)\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.dispatch( this.fetchAllComments() );\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {comments,single_post} = this.props;\r\n\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{\r\n\t\t\t\t\tcomments.map((comment) => {\r\n\r\n\t\t\t\t\t\tif (comment.postId === single_post.id) {\r\n\t\t\t\t\t\t\treturn (\r\n\r\n\t\t\t\t\t\t\t\t<blockquote className=\"blockquote card bg-light mb-4 p-2\" key={comment.id} >\r\n\t\t\t\t\t\t\t\t\t<p className=\"blockquote-footer mb-2\"><cite title=\"Source Title\"><b>Автор: </b>{comment.name}</cite> </p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"mb-1\" >{comment.body} </p>\r\n\t\t\t\t\t\t\t\t\t<small>{comment.email}</small>\r\n\t\t\t\t\t\t\t\t</blockquote>\r\n\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tsingle_post: state.single_post,\r\n\t\tcomments: state.comments\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Comment);","import Comment from './Comment';\r\n\r\nexport default Comment;","import React, {Component} from 'react';\r\n// import {NavLink} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {Container, Card} from 'react-bootstrap';\r\n// import axios from \"axios/index\";\r\n\r\nimport User from \"../User/index.jsx\";\r\nimport Comment from \"../Comment/index.jsx\";\r\n\r\nclass SinglePost extends Component{\r\n\r\n\trender(){\r\n\t\tconst {posts,single_post} = this.props;\r\n\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Container>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tposts.map((post) => {\r\n\t\t\t\t\t\t\tif (post.id === single_post.id) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Card className=\"mb-5\" key={post.id} style={{ border: '0'}}>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Img style={{ height: '20rem', width: '20rem'}} variant=\"top\" src=\"http://089a12354f66f8c089ca-2b0da8e65ee035845e5cc0511bab26ba.r78.cf1.rackcdn.com/global/imagelib/distancelearning/no-img-6c91ea01d3af4559c726afc209ddec79d965cac9.png\" />\r\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Title>{post.title}</Card.Title>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Text>{post.body}</Card.Text>\r\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t<User />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"py-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"my-4\">Комментарии</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t<Comment />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</Container>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tposts: state.posts,\r\n\t\tsingle_post: state.single_post\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps)(SinglePost)","import SinglePost from './SinglePost';\r\n\r\nexport default SinglePost;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {Row,Col} from 'react-bootstrap';\r\nimport Post from '../Post/index.jsx';\r\n\r\nclass SearchView extends Component{\r\n\r\n\trender(){\r\n\t\tconst posts = this.props.posts;\r\n\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h1 className=\"py-5\">Результат Поиска</h1>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tposts.map((post) =>\r\n\r\n\t\t\t\t\t\t\t<Col xs lg=\"4\" key={post.id}>\r\n\t\t\t\t\t\t\t\t<Post\r\n\t\t\t\t\t\t\t\t\tkey={post.id}\r\n\t\t\t\t\t\t\t\t\tid={post.id}\r\n\t\t\t\t\t\t\t\t\tuserId={post.userId}\r\n\t\t\t\t\t\t\t\t\ttitle={post.title}\r\n\t\t\t\t\t\t\t\t\tbody={post.body}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</Row>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn{\r\n\t\tposts: state.posts.filter(post =>\r\n\t\t\tpost.title.includes(state.search) ||\r\n\t\t\tpost.body.includes(state.search) ||\r\n\t\t\tnull\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchView);","import SearchView from './SearchView';\r\n\r\nexport default SearchView;","import NotFound from './NotFound';\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass NotFound extends Component{\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h1>Ошибка 404</h1>\r\n\t\t\t\t<p>Такой страницы у нас нет.</p>\r\n\t\t\t\t<p>Вернуться на\r\n\t\t\t\t\t<NavLink exact to=\"/\" className=\"nav-link\">Главную ?</NavLink>\r\n\t\t\t\t</p>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\nimport {Route, Switch, BrowserRouter} from 'react-router-dom';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nimport Header from './Components/Header/index.jsx';\r\nimport Home from './Components/Home/index.jsx';\r\nimport AllPost from './Components/AllPost/index.jsx';\r\nimport SinglePost from './Components/SinglePost/index.jsx';\r\nimport SearchView from './Components/SearchView/index.jsx';\r\n\r\nimport NotFound from \"./Components/NotFound/index.jsx\";\r\n\r\nclass App extends Component{\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<Header/>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<main>\r\n\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Route exact path='/' component={Home}/>\r\n\t\t\t\t\t\t\t\t<Route exact path='/posts' component={AllPost}/>\r\n\t\t\t\t\t\t\t\t<Route path='/posts/:id' component={SinglePost}/>\r\n\t\t\t\t\t\t\t\t<Route component={NotFound}/>\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Route exact path='/posts' />\r\n\t\t\t\t\t\t\t\t<Route path='/posts/search' component={SearchView}/>\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers/index';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware,thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nProvider.PropTypes = {\r\n  store: PropTypes.array,\r\n};\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}